{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst config = {\n  apiKey: \"AIzaSyBA5vUofG8UGkYtanSgjLuZS3kWfymKPvo\",\n  authDomain: \"crwn-db-46d86.firebaseapp.com\",\n  projectId: \"crwn-db-46d86\",\n  storageBucket: \"crwn-db-46d86.appspot.com\",\n  messagingSenderId: \"187258272587\",\n  appId: \"1:187258272587:web:d21f60feabffb20f8446ce\",\n  measurementId: \"G-JDR6VJZ79N\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // if user auth doesnt exist get out of the function\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot); //making sure users don't recreate\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date(); // tells us the current date \n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user!:', error.message);\n    }\n  } // end if \n\n\n  return userRef;\n}; // end const\n\nfirebase.initializeApp(config); // Look at Documentation for this\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); // gives access to a new google auth provder class from that library\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/obaid/Desktop/ObaidsProjects/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AAEA,MAAMC,MAAM,GAAG;AAEXC,EAAAA,MAAM,EAAE,yCAFG;AAIXC,EAAAA,UAAU,EAAE,+BAJD;AAMXC,EAAAA,SAAS,EAAE,eANA;AAQXC,EAAAA,aAAa,EAAE,2BARJ;AAUXC,EAAAA,iBAAiB,EAAE,cAVR;AAYXC,EAAAA,KAAK,EAAE,2CAZI;AAcXC,EAAAA,aAAa,EAAE;AAdJ,CAAf;AAkBE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC1E,MAAG,CAACD,QAAJ,EAAc,OAD4D,CACpD;;AAEtB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAN0E,CAO1E;;AACA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBZ,QAA7B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB,CAFkB,CAEY;;AAE9B,QAAG;AAED,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KARD,CAQE,OAAMe,KAAN,EAAa;AAEbR,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCO,KAAK,CAACC,OAA3C;AAED;AAEF,GA1ByE,CA0BzE;;;AAIC,SAAOf,OAAP;AAEF,CAhCK,C,CAgCL;;AAEFZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,E,CAGA;;AACA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAGP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\n\r\nconst config = {\r\n\r\n    apiKey: \"AIzaSyBA5vUofG8UGkYtanSgjLuZS3kWfymKPvo\",\r\n  \r\n    authDomain: \"crwn-db-46d86.firebaseapp.com\",\r\n  \r\n    projectId: \"crwn-db-46d86\",\r\n  \r\n    storageBucket: \"crwn-db-46d86.appspot.com\",\r\n  \r\n    messagingSenderId: \"187258272587\",\r\n  \r\n    appId: \"1:187258272587:web:d21f60feabffb20f8446ce\",\r\n  \r\n    measurementId: \"G-JDR6VJZ79N\"\r\n  \r\n  };\r\n  \r\n  export const createUserProfileDocument = async(userAuth, additionalData) => { \r\n    if(!userAuth) return; // if user auth doesnt exist get out of the function\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    \r\n    console.log(snapShot);\r\n    //making sure users don't recreate\r\n    if(!snapShot.exists){\r\n      const {displayName, email} = userAuth; \r\n      const createdAt = new Date(); // tells us the current date \r\n\r\n      try{\r\n\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch(error) {\r\n\r\n        console.log('error creating user!:', error.message);\r\n\r\n      }\r\n\r\n    }// end if \r\n\r\n    \r\n\r\n      return userRef;\r\n\r\n   }// end const\r\n\r\n  firebase.initializeApp(config);\r\n\r\n\r\n  // Look at Documentation for this\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  // gives access to a new google auth provder class from that library\r\n\r\n  provider.setCustomParameters({prompt: 'select_account'})\r\n\r\n  \r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}